---
interface Props {
    title: string,
    subTitle: string,
    ctaLabel: string,
    ctaLink: string,
}
const props = Astro.props;
/*
export default function halfPageColorizerBlock({ tinaProps }: Props) {

    const GetDefaultTrim = ({tinaProps}: Props) => {
        return tinaProps.trims?.find((trim: PageBlocksSectionHalfPageColorizerBlockTrimsTrim) => {
            if (trim.isDefault) {
                return trim.trimName;
            }
        })
    }

    const GetDefaultColor = ({tinaProps}: Props) => {
        return tinaProps.trims?.find((trim: PageBlocksSectionHalfPageColorizerBlockTrimsTrim) => {
            if(trim.isDefault) {
                return trim.colors?.find((color: PageBlocksSectionHalfPageColorizerBlockTrimsTrimColorsColor) => {
                    if(color.isDefault) {
                        return color;
                    }
                })
            }
        })
        const defaultTrim = GetDefaultTrim({tinaProps});
        if (defaultTrim) {
            return defaultTrim.colors?.find((color: PageBlocksSectionHalfPageColorizerBlockTrimsTrimColorsColor) => {
                if(color.isDefault) {
                    return color;
                }
            })
        }
    }
*/
---
<gb-hfpg-colorizer>
    <div>
        <div>{props.title}</div>
        <div>{props.subTitle}</div>
        <button class="open">test</button>
    </div>
</gb-hfpg-colorizer>